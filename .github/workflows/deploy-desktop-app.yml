name: "Deploy Avalonia App"
on:
  push:
    tags:
      - "Billing/v*"

env:
  PROJECT_PATH: App/App.csproj
  DOTNET_CORE_VERSION: 6.0.x
  TURN_OFF_TELEMETRY: 1

jobs:
  deploy-Windows:
      runs-on: windows-latest
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
#        - run: set DOTNET_CLI_TELEMETRY_OPTOUT=${{ env.TURN_OFF_TELEMETRY }}
        - name: Install dependencies
          run: dotnet restore ${{ env.PROJECT_PATH }}
        
        - name: Build Windows
          run: |
            dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore
            dotnet publish ${{ env.PROJECT_PATH }} -c Release --self-contained -r win-x64 -p:PublishSingleFile=true --no-build
        - name: Upload Windows asses to release
          uses: csexton/release-asset-action@v2
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            pattern: App/bin/Release/net6.0/win-x64/publish/*.exe
            release-url: ${{ steps.create_release.outputs.upload_url }}

  deploy-Linux:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
#      - run: set DOTNET_CLI_TELEMETRY_OPTOUT=${{ env.TURN_OFF_TELEMETRY }}
      
      - name: Install dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}
      
      - name: Build Linux
        run: |
          dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore
          dotnet publish ${{ env.PROJECT_PATH }} -c Release --self-contained -r linux-x64 -p:UseAppHost=true --no-build
      - name: Upload Linux Assets to Release with a wildcard
        uses: csexton/release-asset-action@v2
        with:
          pattern:  App/bin/Release/net6.0/linux-x64/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ steps.create_release.outputs.upload_url }}